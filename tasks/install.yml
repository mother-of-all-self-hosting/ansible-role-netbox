# SPDX-FileCopyrightText: 2023 Slavi Pantaleev
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---

- name: Ensure NetBox paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
    owner: "{{ netbox_uid }}"
    group: "{{ netbox_gid }}"
  with_items:
    - path: "{{ netbox_base_path }}"
      mode: 750
      when: true
    - path: "{{ netbox_config_path }}"
      mode: 750
      when: true
    # Media is written by the `unit` user in the container,
    # so we're using more lax permissions for this path.
    - path: "{{ netbox_media_path }}"
      mode: 777
      when: true
    - path: "{{ netbox_reports_path }}"
      mode: 750
      when: true
    - path: "{{ netbox_scripts_path }}"
      mode: 750
      when: true
    - path: "{{ netbox_customized_container_src_path }}"
      mode: 750
      when: "{{ netbox_container_image_customizations_enabled }}"
  when: item.when | bool

- name: Ensure NetBox support files installed
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    mode: "{{ item.mode }}"
    owner: "{{ netbox_uid }}"
    group: "{{ netbox_gid }}"
  with_items:
    - src: "{{ role_path }}/templates/env.j2"
      dst: "{{ netbox_base_path }}/env"
      mode: 640
    - src: "{{ role_path }}/templates/labels.j2"
      dst: "{{ netbox_base_path }}/labels"
      mode: 640
    - src: "{{ role_path }}/templates/config/extra.py.j2"
      dst: "{{ netbox_config_path }}/extra.py"
      mode: 444

- name: Ensure NetBox container image is pulled
  community.docker.docker_image:
    name: "{{ netbox_container_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ netbox_container_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else netbox_container_image_force_pull }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- when: "netbox_container_image_customizations_enabled | bool"
  block:
    - name: Ensure customizations Dockerfile is created
      ansible.builtin.template:
        src: "{{ role_path }}/templates/customizations/Dockerfile.j2"
        dest: "{{ netbox_customized_container_src_path }}/Dockerfile"
        owner: "{{ netbox_uid }}"
        group: "{{ netbox_gid }}"
        mode: 0640
      register: netbox_container_image_customizations_dockerfile_result

    - name: Ensure customized container image for NetBox is built
      community.docker.docker_image:
        name: "{{ netbox_container_image_customized }}"
        source: build
        force_source: "{{ netbox_container_image_customizations_dockerfile_result.changed }}"
        build:
          dockerfile: Dockerfile
          path: "{{ netbox_customized_container_src_path }}"
          pull: true

- name: Ensure NetBox container network is created
  community.general.docker_network:
    enable_ipv6: "{{ devture_systemd_docker_base_ipv6_enabled }}"
    name: "{{ netbox_container_network }}"
    driver: bridge
    driver_options: "{{ devture_systemd_docker_base_container_networks_driver_options }}"

- name: Ensure NetBox systemd services are present
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/{{ item.src }}"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/{{ item.dst }}"
  with_items:
    - src: netbox.service.j2
      dst: "{{ netbox_identifier }}.service"
    - src: netbox-worker.service.j2
      dst: "{{ netbox_identifier }}-worker.service"
    - src: netbox-housekeeping.service.j2
      dst: "{{ netbox_identifier }}-housekeeping.service"
